function log(input) {
  if (input === undefined) {
    console.log(input);
  }

  var colors = require("colors");
  // Get the line  the log occurs on
  let location = new Error().stack
    .split("\n")[2]
    .split("/")
    .pop()
    .split(":")
    .slice(0, 2)
    .join(":");

  // Check to see if this is something that should be output as a console.table
  if (Array.isArray(input)) {
    // Check to see if the array contains only objects
    let arrOfObjs = true;
    input.forEach(obj => {
      if (!(typeof obj === "object") || Array.isArray(obj)) {
        arrOfObjs = false;
      }
    });

    if (arrOfObjs) {
      // Check to see if all of the objects contain the same keys
      let keys = Object.keys(input[0]);
      let table = true;
      let i = 1;

      while (table && i < input.length) {
        let currentKeys = Object.keys(input[i]);
        currentKeys.forEach(key => {
          if (!keys.includes(key)) {
            table = false;
          }
        });
        i++;
      }

      if (table) {
        console.log("\n======", location, "======");
        console.table(input);
        return;
      }
    }
  }

  function printObj(obj) {
    let keys = Object.keys(obj);
    console.log("{");
    for (let i = 0; i < keys.length; i++) {
      let key = keys[i];
      console.log(`  ${key.bold.underline.cyan}:`, obj[key]);
    }
    console.log("}");
    return;
  }

  if (!Array.isArray(input) && typeof input === "object") {
    console.log("\n======", location, "======");
    printObj(input);
    return;
  }

  console.log("\n======", location, "======\n", input);
}

module.exports = log;
